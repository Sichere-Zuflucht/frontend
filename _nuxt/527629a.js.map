{"version":3,"sources":["webpack:///./node_modules/@firebase/storage/dist/index.esm.js"],"names":["DEFAULT_HOST","_super","FirebaseStorageError","code","message","_this","call","this","prependCode","customData","serverResponse","Object","setPrototypeOf","prototype","_codeEquals","defineProperty","get","enumerable","configurable","set","unknown","cannotSliceBlob","invalidArgument","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","parts","DataURLParts","base64","rest","value","decoded","decodeURIComponent","e","percentEncodedBytes_","dataUrl","dataURLContentType_","b","i","length","c","charCodeAt","push","Uint8Array","hasMinus","indexOf","hasUnder","hasPlus","hasSlash","replace","bytes","atob","array","dataURL","matches","match","middle","s","end","substring","ErrorCode","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","NetworkXhrIo","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","url","method","body","headers","open","undefined","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","Location","bucket","path","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gsRegex","RegExp","httpModify","loc","firebaseStorageHost","groups","regex","indices","postModify","charAt","slice","group","captures","exec","bucketValue","pathValue","invalidUrl","FailRequest","error","promise_","reject","getPromise","cancel","_appDelete","isString","p","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","makeQueryString","params","queryPart","NetworkRequest","successCodes","additionalRetryCodes","callback","errorCallback","timeout","progressCallback","pool","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","resolve_","reject_","start_","self","backoffDone","requestWentThrough","err","xhr","wasSuccessCode","result","canceled","RequestEndStatus","f","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","_i","arguments","apply","callWithDelay","millis","setTimeout","handler","success","waitMillis","Math","random","stopped","stop","wasTimeout","clearTimeout","start","backoffCallback","progressListener","then","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","loaded","total","lengthComputable","appDelete","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","bb","append","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","sliceBlob","buffer","blobby","map","val","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","jsonObjectOrNull","obj","JSON","parse","Array","isArray","lastComponent","index","lastIndexOf","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","Number","fromResource","service","resource","len","mapping","_makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","stringify","fromResponseString","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromBackendResponse","RequestInfo","urlParams","errorHandler","handlerCheck","cndn","metadataHandler","text","downloadUrlHandler","tokens","split","token","alt","downloadUrlFromResourceString","sharedErrorHandler","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","list","delimiter","pageToken","maxResults","isRoot","listHandler","metadataForUpload_","metadataClone","assign","determineContentType_","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","maxUploadRetryTime","uploadStatus","newCurrent","Observer","nextOrObserver","complete","next","observer","argsToForward","UploadTask","ref","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","storage","_getAuthToken","authToken","metadataForUpload","createResumableUpload","_location","createRequest","_makeRequest","sizeString","isNaN","getResumableUploadStatus","statusRequest","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","boundary","str","genBoundary","metadata_","preBlobPart","postBlobPart","multipartUpload","multipartRequest","transferred","old","_notifyObservers","wasPaused","externalState","bytesTransferred","totalBytes","task","on","completed","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","splice","_finishPromise","triggered","bind","snapshot","resume","valid","pause","Reference","_service","_newRef","newPath","_throwIfRoot","listAll","accumulator","listAllHelper","nextPage","label","list$1","sent","options","op","updateMetadata$1","updateMetadata","getDownloadURL","getDownloadUrl","deleteObject$1","_xhr","_text","deleteObject","_getChild","childPath","canonicalChildPath","filter","component","join","child","isUrl","test","refFromPath","_bucket","includes","serviceOrRef","pathOrUrl","StorageService","app","_authProvider","_pool","_url","_firebaseVersion","config","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","auth","tokenData","getImmediate","optional","getToken","accessToken","_delete","request","clear","request_1","appId","firebaseVersion","addGmpidHeader_","addAuthHeader_","addVersionHeader_","makeRequest","add","delete","uploadBytesResumable$1","uploadBytesResumable","getMetadata$2","getMetadata$1","ref$1","instance","namespaceExports","UploadTaskSnapshotCompat","_delegate","UploadTaskCompat","wrappedNextOrObserver","taskSnapshot","ListResultCompat","ReferenceCompat","_getChild$1","root","parent","put","putString","r","list$2","updateMetadata$2","StorageServiceCompat","INTERNAL","refFromURL","setMaxUploadRetryTime","setMaxOperationRetryTime","factory","container","instanceIdentifier","getProvider","authProvider","SDK_VERSION","Storage","registerComponent","setServiceProps","setMultipleInstances","registerVersion"],"mappings":"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","file":"527629a.js","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __spreadArray, __awaiter, __generator, __assign } from 'tslib';\nimport { FirebaseError } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\r\nvar FirebaseStorageError = /** @class */ (function (_super) {\r\n    __extends(FirebaseStorageError, _super);\r\n    /**\r\n     * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     */\r\n    function FirebaseStorageError(code, message) {\r\n        var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\r\n        /**\r\n         * Stores custom error data unque to FirebaseStorageError.\r\n         */\r\n        _this.customData = { serverResponse: null };\r\n        // Without this, `instanceof FirebaseStorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n     */\r\n    FirebaseStorageError.prototype._codeEquals = function (code) {\r\n        return prependCode(code) === this.code;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        /**\r\n         * Error message including serverResponse if available.\r\n         */\r\n        get: function () {\r\n            if (this.customData.serverResponse) {\r\n                return this.message + \"\\n\" + this.customData.serverResponse;\r\n            }\r\n            else {\r\n                return this.message;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        /**\r\n         * Optional response message that was added by the server.\r\n         */\r\n        get: function () {\r\n            return this.customData.serverResponse;\r\n        },\r\n        set: function (serverResponse) {\r\n            this.customData.serverResponse = serverResponse;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}(FirebaseError));\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(\"unknown\" /* UNKNOWN */, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(\"object-not-found\" /* OBJECT_NOT_FOUND */, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(\"quota-exceeded\" /* QUOTA_EXCEEDED */, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(\"unauthenticated\" /* UNAUTHENTICATED */, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(\"unauthorized\" /* UNAUTHORIZED */, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(\"retry-limit-exceeded\" /* RETRY_LIMIT_EXCEEDED */, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(\"canceled\" /* CANCELED */, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(\"invalid-url\" /* INVALID_URL */, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(\"invalid-default-bucket\" /* INVALID_DEFAULT_BUCKET */, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(\"no-default-bucket\" /* NO_DEFAULT_BUCKET */, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(\"cannot-slice-blob\" /* CANNOT_SLICE_BLOB */, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(\"server-file-wrong-size\" /* SERVER_FILE_WRONG_SIZE */, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(\"no-download-url\" /* NO_DOWNLOAD_URL */, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(message) {\r\n    return new FirebaseStorageError(\"invalid-argument\" /* INVALID_ARGUMENT */, message);\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(\"app-deleted\" /* APP_DELETED */, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(\"invalid-root-operation\" /* INVALID_ROOT_OPERATION */, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(\"invalid-format\" /* INVALID_FORMAT */, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(\"internal-error\" /* INTERNAL_ERROR */, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\r\nvar StringFormat = {\r\n    /**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */\r\n    RAW: 'raw',\r\n    /**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64: 'base64',\r\n    /**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64URL: 'base64url',\r\n    /**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */\r\n    DATA_URL: 'data_url'\r\n};\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event that is triggered on a task.\r\n */\r\nvar TaskEvent = {\r\n    /**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\n/**\r\n * Represents the current state of a running upload.\r\n */\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case \"running\" /* RUNNING */:\r\n        case \"pausing\" /* PAUSING */:\r\n        case \"canceling\" /* CANCELING */:\r\n            return TaskState.RUNNING;\r\n        case \"paused\" /* PAUSED */:\r\n            return TaskState.PAUSED;\r\n        case \"success\" /* SUCCESS */:\r\n            return TaskState.SUCCESS;\r\n        case \"canceled\" /* CANCELED */:\r\n            return TaskState.CANCELED;\r\n        case \"error\" /* ERROR */:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\r\n    }\r\n    if (value > maxValue) {\r\n        throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.serverResponse = xhr.getResponseText();\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers, firebaseVersion) {\r\n    headers['X-Firebase-Storage-Version'] =\r\n        'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, pool, firebaseVersion) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers, firebaseVersion);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new FirebaseStorageError(\"unsupported-environment\" /* UNSUPPORTED_ENVIRONMENT */, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return service._makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = service._makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(service, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(service, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(service, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error;\r\n            this.complete = complete;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    function UploadTask(ref, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        /**\r\n         * Number of bytes transferred so far.\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = \"running\" /* RUNNING */;\r\n        this._errorHandler = function (error) {\r\n            _this._request = undefined;\r\n            _this._chunkMultiplier = 1;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                _this._needToFetchStatus = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = function (error) {\r\n            _this._request = undefined;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._resolve = resolve;\r\n            _this._reject = reject;\r\n            _this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, function () { });\r\n    }\r\n    UploadTask.prototype._makeProgressCallback = function () {\r\n        var _this = this;\r\n        var sizeBefore = this._transferred;\r\n        return function (loaded) { return _this._updateProgress(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype._shouldDoResumable = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype._start = function () {\r\n        if (this._state !== \"running\" /* RUNNING */) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    };\r\n    UploadTask.prototype._resolveToken = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this._ref.storage._getAuthToken().then(function (authToken) {\r\n            switch (_this._state) {\r\n                case \"running\" /* RUNNING */:\r\n                    callback(authToken);\r\n                    break;\r\n                case \"canceling\" /* CANCELING */:\r\n                    _this._transition(\"canceled\" /* CANCELED */);\r\n                    break;\r\n                case \"pausing\" /* PAUSING */:\r\n                    _this._transition(\"paused\" /* PAUSED */);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype._createResumable = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var createRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\r\n            _this._request = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this._request = undefined;\r\n                _this._uploadUrl = url;\r\n                _this._needToFetchStatus = false;\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._fetchStatus = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\r\n            var statusRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\r\n            _this._request = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this._request = undefined;\r\n                _this._updateProgress(status.current);\r\n                _this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    _this._needToFetchMetadata = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._continueUpload = function () {\r\n        var _this = this;\r\n        var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        var status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                _this._error = e;\r\n                _this._transition(\"error\" /* ERROR */);\r\n                return;\r\n            }\r\n            var uploadRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\r\n            _this._request = uploadRequest;\r\n            uploadRequest.getPromise().then(function (newStatus) {\r\n                _this._increaseMultiplier();\r\n                _this._request = undefined;\r\n                _this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this._metadata = newStatus.metadata;\r\n                    _this._transition(\"success\" /* SUCCESS */);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._increaseMultiplier = function () {\r\n        var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype._fetchMetadata = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = getMetadata(_this._ref.storage, _this._ref._location, _this._mappings);\r\n            var metadataRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\r\n            _this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._transition(\"success\" /* SUCCESS */);\r\n            }, _this._metadataErrorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._oneShotUpload = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var multipartRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\r\n            _this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._updateProgress(_this._blob.size());\r\n                _this._transition(\"success\" /* SUCCESS */);\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._updateProgress = function (transferred) {\r\n        var old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    };\r\n    UploadTask.prototype._transition = function (state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case \"canceling\" /* CANCELING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"pausing\" /* PAUSING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this._state === \"paused\" /* PAUSED */;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case \"paused\" /* PAUSED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"canceled\" /* CANCELED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"error\" /* ERROR */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"success\" /* SUCCESS */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this._state) {\r\n            case \"pausing\" /* PAUSING */:\r\n                this._transition(\"paused\" /* PAUSED */);\r\n                break;\r\n            case \"canceling\" /* CANCELING */:\r\n                this._transition(\"canceled\" /* CANCELED */);\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                this._start();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        /**\r\n         * A snapshot of the current task state.\r\n         */\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this._state);\r\n            return {\r\n                bytesTransferred: this._transferred,\r\n                totalBytes: this._blob.size(),\r\n                state: externalState,\r\n                metadata: this._metadata,\r\n                task: this,\r\n                ref: this._ref\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `FirebaseStorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var observer = new Observer(nextOrObserver, error, completed);\r\n        this._addObserver(observer);\r\n        return function () {\r\n            _this._removeObserver(observer);\r\n        };\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype._addObserver = function (observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype._removeObserver = function (observer) {\r\n        var i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObservers = function () {\r\n        var _this = this;\r\n        this._finishPromise();\r\n        var observers = this._observers.slice();\r\n        observers.forEach(function (observer) {\r\n            _this._notifyObserver(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype._finishPromise = function () {\r\n        if (this._resolve !== undefined) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObserver = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        var valid = this._state === \"paused\" /* PAUSED */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"running\" /* RUNNING */);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        var valid = this._state === \"running\" /* RUNNING */;\r\n        if (valid) {\r\n            this._transition(\"pausing\" /* PAUSING */);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        var valid = this._state === \"running\" /* RUNNING */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"canceling\" /* CANCELING */);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    };\r\n    Reference.prototype._newRef = function (service, location) {\r\n        return new Reference(service, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * A reference to the root of this object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this._location.bucket, '');\r\n            return this._newRef(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        /**\r\n         * The name of the bucket containing this reference's object.\r\n         */\r\n        get: function () {\r\n            return this._location.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        /**\r\n         * The full path of this object.\r\n         */\r\n        get: function () {\r\n            return this._location.path;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        /**\r\n         * The short name of this object, which is the last component of the full path.\r\n         * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n         */\r\n        get: function () {\r\n            return lastComponent(this._location.path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        /**\r\n         * The `StorageService` instance this `StorageReference` is associated with.\r\n         */\r\n        get: function () {\r\n            return this._service;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n         * this reference is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this._location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this._location.bucket, newPath);\r\n            return new Reference(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\r\n    Reference.prototype._throwIfRoot = function (name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    var accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(function () { return accumulator; });\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nfunction listAllHelper(ref, accumulator, pageToken) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var opt, nextPage;\r\n        var _a, _b;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    opt = {\r\n                        // maxResults is 1000 by default.\r\n                        pageToken: pageToken\r\n                    };\r\n                    return [4 /*yield*/, list$1(ref, opt)];\r\n                case 1:\r\n                    nextPage = _c.sent();\r\n                    (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                    (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                    if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, listAllHelper(ref, accumulator, nextPage.nextPageToken)];\r\n                case 2:\r\n                    _c.sent();\r\n                    _c.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, op, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (options != null) {\r\n                        if (typeof options.maxResults === 'number') {\r\n                            validateNumber('options.maxResults', \r\n                            /* minValue= */ 1, \r\n                            /* maxValue= */ 1000, options.maxResults);\r\n                        }\r\n                    }\r\n                    return [4 /*yield*/, ref.storage._getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    op = options || {};\r\n                    requestInfo = list(ref.storage, ref._location, \r\n                    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n                    return [2 /*return*/, ref.storage._makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getMetadata');\r\n                    return [4 /*yield*/, ref.storage._getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = getMetadata(ref.storage, ref._location, getMappings());\r\n                    return [2 /*return*/, ref.storage._makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('updateMetadata');\r\n                    return [4 /*yield*/, ref.storage._getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = updateMetadata(ref.storage, ref._location, metadata, getMappings());\r\n                    return [2 /*return*/, ref.storage._makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getDownloadURL');\r\n                    return [4 /*yield*/, ref.storage._getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n                    return [2 /*return*/, ref.storage\r\n                            ._makeRequest(requestInfo, authToken)\r\n                            .getPromise()\r\n                            .then(function (url) {\r\n                            if (url === null) {\r\n                                throw noDownloadURL();\r\n                            }\r\n                            return url;\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('deleteObject');\r\n                    return [4 /*yield*/, ref.storage._getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = deleteObject(ref.storage, ref._location);\r\n                    return [2 /*return*/, ref.storage._makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\r\nfunction _getChild(ref, childPath) {\r\n    var newPath = child(ref._location.path, childPath);\r\n    var location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof StorageService) {\r\n        var service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        var reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            if (path.includes('..')) {\r\n                throw invalidArgument('`path` param cannot contain \"..\"');\r\n            }\r\n            return _getChild(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof StorageService) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(config) {\r\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString);\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @public\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageService = /** @class */ (function () {\r\n    function StorageService(\r\n    /**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */\r\n    app, _authProvider, _pool, _url, _firebaseVersion) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._pool = _pool;\r\n        this._url = _url;\r\n        this._firebaseVersion = _firebaseVersion;\r\n        this._bucket = null;\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this.app.options);\r\n        }\r\n    }\r\n    Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\r\n        /**\r\n         * The maximum time to retry uploads in milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._maxUploadRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxUploadRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\r\n        /**\r\n         * The maximum time to retry operations other than uploads or downloads in\r\n         * milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._maxOperationRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxOperationRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StorageService.prototype._getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var auth, tokenData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        auth = this._authProvider.getImmediate({ optional: true });\r\n                        if (!auth) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, auth.getToken()];\r\n                    case 1:\r\n                        tokenData = _a.sent();\r\n                        if (tokenData !== null) {\r\n                            return [2 /*return*/, tokenData.accessToken];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    StorageService.prototype._delete = function () {\r\n        this._deleted = true;\r\n        this._requests.forEach(function (request) { return request.cancel(); });\r\n        this._requests.clear();\r\n        return Promise.resolve();\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    StorageService.prototype._makeStorageReference = function (loc) {\r\n        return new Reference(this, loc);\r\n    };\r\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    StorageService.prototype._makeRequest = function (requestInfo, authToken) {\r\n        var _this = this;\r\n        if (!this._deleted) {\r\n            var request_1 = makeRequest(requestInfo, this._appId, authToken, this._pool, this._firebaseVersion);\r\n            this._requests.add(request_1);\r\n            // Request removes itself from set when complete.\r\n            request_1.getPromise().then(function () { return _this._requests.delete(request_1); }, function () { return _this._requests.delete(request_1); });\r\n            return request_1;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    return StorageService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable$1(ref, data, metadata) {\r\n    return uploadBytesResumable(ref, data, metadata);\r\n}\r\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$2(ref) {\r\n    return getMetadata$1(ref);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves with the new metadata for this object.\r\n */\r\nfunction updateMetadata$2(ref, metadata) {\r\n    return updateMetadata$1(ref, metadata);\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$2(ref, options) {\r\n    return list$1(ref, options);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll$1(ref) {\r\n    return listAll(ref);\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL$1(ref) {\r\n    return getDownloadURL(ref);\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$2(ref) {\r\n    return deleteObject$1(ref);\r\n}\r\nfunction ref$1(serviceOrRef, pathOrUrl) {\r\n    return ref(serviceOrRef, pathOrUrl);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction _getChild$1(ref, childPath) {\r\n    return _getChild(ref, childPath);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskSnapshotCompat = /** @class */ (function () {\r\n    function UploadTaskSnapshotCompat(_delegate, task, ref) {\r\n        this._delegate = _delegate;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\r\n        get: function () {\r\n            return this._delegate.bytesTransferred;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\r\n        get: function () {\r\n            return this._delegate.metadata;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\r\n        get: function () {\r\n            return this._delegate.state;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\r\n        get: function () {\r\n            return this._delegate.totalBytes;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshotCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskCompat = /** @class */ (function () {\r\n    function UploadTaskCompat(_delegate, _ref) {\r\n        this._delegate = _delegate;\r\n        this._ref = _ref;\r\n        this.cancel = this._delegate.cancel.bind(this._delegate);\r\n        this.catch = this._delegate.catch.bind(this._delegate);\r\n        this.pause = this._delegate.pause.bind(this._delegate);\r\n        this.resume = this._delegate.resume.bind(this._delegate);\r\n    }\r\n    Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\r\n        get: function () {\r\n            return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\r\n        var _this = this;\r\n        return this._delegate.then(function (snapshot) {\r\n            if (onFulfilled) {\r\n                return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\r\n            }\r\n        }, onRejected);\r\n    };\r\n    UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var wrappedNextOrObserver = undefined;\r\n        if (!!nextOrObserver) {\r\n            if (typeof nextOrObserver === 'function') {\r\n                wrappedNextOrObserver = function (taskSnapshot) {\r\n                    return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                };\r\n            }\r\n            else {\r\n                wrappedNextOrObserver = {\r\n                    next: !!nextOrObserver.next\r\n                        ? function (taskSnapshot) {\r\n                            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                        }\r\n                        : undefined,\r\n                    complete: nextOrObserver.complete || undefined,\r\n                    error: nextOrObserver.error || undefined\r\n                };\r\n            }\r\n        }\r\n        return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\r\n    };\r\n    return UploadTaskCompat;\r\n}());\n\nvar ListResultCompat = /** @class */ (function () {\r\n    function ListResultCompat(_delegate, _service) {\r\n        this._delegate = _delegate;\r\n        this._service = _service;\r\n    }\r\n    Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.prefixes.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"items\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.items.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\r\n        get: function () {\r\n            return this._delegate.nextPageToken || null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ListResultCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ReferenceCompat = /** @class */ (function () {\r\n    function ReferenceCompat(_delegate, storage) {\r\n        this._delegate = _delegate;\r\n        this.storage = storage;\r\n    }\r\n    Object.defineProperty(ReferenceCompat.prototype, \"name\", {\r\n        get: function () {\r\n            return this._delegate.name;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._delegate.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._delegate.fullPath;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ReferenceCompat.prototype.toString = function () {\r\n        return this._delegate.toString();\r\n    };\r\n    /**\r\n     * @returns A reference to the object obtained by\r\n     * appending childPath, removing any duplicate, beginning, or trailing\r\n     * slashes.\r\n     */\r\n    ReferenceCompat.prototype.child = function (childPath) {\r\n        var reference = _getChild$1(this._delegate, childPath);\r\n        return new ReferenceCompat(reference, this.storage);\r\n    };\r\n    Object.defineProperty(ReferenceCompat.prototype, \"root\", {\r\n        get: function () {\r\n            return new ReferenceCompat(this._delegate.root, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\r\n        /**\r\n         * @returns A reference to the parent of the\r\n         * current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var reference = this._delegate.parent;\r\n            if (reference == null) {\r\n                return null;\r\n            }\r\n            return new ReferenceCompat(reference, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data - The blob to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.put = function (data, metadata) {\r\n        this._throwIfRoot('put');\r\n        return new UploadTaskCompat(uploadBytesResumable$1(this._delegate, data, metadata), this);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value - The string to upload.\r\n     * @param format - The format of the string to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        this._throwIfRoot('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = __assign({}, metadata);\r\n        if (metadataClone['contentType'] == null && data.contentType != null) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTaskCompat(new UploadTask(this._delegate, new FbsBlob(data.data, true), metadataClone), this);\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @returns A Promise that resolves with all the items and prefixes under\r\n     *  the current storage reference. `prefixes` contains references to\r\n     *  sub-directories and `items` contains references to objects in this\r\n     *  folder. `nextPageToken` is never returned.\r\n     */\r\n    ReferenceCompat.prototype.listAll = function () {\r\n        var _this = this;\r\n        return listAll$1(this._delegate).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options - See ListOptions for details.\r\n     * @returns A Promise that resolves with the items and prefixes.\r\n     * `prefixes` contains references to sub-folders and `items`\r\n     * contains references to objects in this folder. `nextPageToken`\r\n     * can be used to get the rest of the results.\r\n     */\r\n    ReferenceCompat.prototype.list = function (options) {\r\n        var _this = this;\r\n        return list$2(this._delegate, options || undefined).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * A promise that resolves with the metadata for this object. If this\r\n     * object doesn't exist or metadata cannot be retreived, the promise is\r\n     * rejected.\r\n     */\r\n    ReferenceCompat.prototype.getMetadata = function () {\r\n        return getMetadata$2(this._delegate);\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata - The new metadata for the object.\r\n     * Only values that have been explicitly set will be changed. Explicitly\r\n     * setting a value to null will remove the metadata.\r\n     * @returns A promise that resolves\r\n     * with the new metadata for this object.\r\n     * @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    ReferenceCompat.prototype.updateMetadata = function (metadata) {\r\n        return updateMetadata$2(this._delegate, metadata);\r\n    };\r\n    /**\r\n     * @returns A promise that resolves with the download\r\n     * URL for this object.\r\n     */\r\n    ReferenceCompat.prototype.getDownloadURL = function () {\r\n        return getDownloadURL$1(this._delegate);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @returns A promise that resolves if the deletion succeeds.\r\n     */\r\n    ReferenceCompat.prototype.delete = function () {\r\n        this._throwIfRoot('delete');\r\n        return deleteObject$2(this._delegate);\r\n    };\r\n    ReferenceCompat.prototype._throwIfRoot = function (name) {\r\n        if (this._delegate._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return ReferenceCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageServiceCompat = /** @class */ (function () {\r\n    function StorageServiceCompat(app, _delegate) {\r\n        var _this = this;\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n        this.INTERNAL = {\r\n            /**\r\n             * Called when the associated app is deleted.\r\n             */\r\n            delete: function () {\r\n                return _this._delegate._delete();\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxOperationRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxUploadRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    StorageServiceCompat.prototype.ref = function (path) {\r\n        if (isUrl(path)) {\r\n            throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\r\n        }\r\n        return new ReferenceCompat(ref$1(this._delegate, path), this);\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    StorageServiceCompat.prototype.refFromURL = function (url) {\r\n        if (!isUrl(url)) {\r\n            throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\r\n        }\r\n        try {\r\n            Location.makeFromUrl(url);\r\n        }\r\n        catch (e) {\r\n            throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\r\n        }\r\n        return new ReferenceCompat(ref$1(this._delegate, url), this);\r\n    };\r\n    StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\r\n        this._delegate.maxUploadRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\r\n        this._delegate.maxOperationRetryTime = time;\r\n    };\r\n    return StorageServiceCompat;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.4.5\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, _a) {\r\n    var url = _a.instanceIdentifier;\r\n    // Dependencies\r\n    // TODO: This should eventually be 'app-compat'\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    // TODO: get StorageService instance from component framework instead\r\n    // of creating a new one.\r\n    var storageServiceCompat = new StorageServiceCompat(app, new StorageService(app, authProvider, new XhrIoPool(), url, firebase.SDK_VERSION));\r\n    return storageServiceCompat;\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: StorageService,\r\n        Reference: ReferenceCompat\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}